(() => { "use strict"; const t = function (e) { return new t.prototype.init(e) }; t.prototype.init = function (t) { return t ? t.tagName ? (this[0] = t, this.length = 1, this) : (Object.assign(this, document.querySelectorAll(t)), this.length = document.querySelectorAll(t).length, this) : this }, t.prototype.init.prototype = t.prototype, window.$ = t; const e = t; e.prototype.show = function () { for (let t = 0; t < this.length; t++)this[t].style && (this[t].style.display = ""); return this }, e.prototype.hide = function () { for (let t = 0; t < this.length; t++)this[t].style && (this[t].style.display = "none"); return this }, e.prototype.toggle = function () { for (let t = 0; t < this.length; t++)this[t].style && ("none" === this[t].style.display ? this[t].style.display = "" : this[t].style.display = "none"); return this }, e.prototype.addClass = function (...t) { for (let e = 0; e < this.length; e++)this[e].classList.add(...t); return this }, e.prototype.removeClass = function (...t) { for (let e = 0; e < this.length; e++)this[e].classList.remove(...t); return this }, e.prototype.toggleClass = function (t) { for (let e = 0; e < this.length; e++)this[e].classList && this[e].classList.toggle(t); return this }, e.prototype.on = function (t, e) { if (!t || !e) return this; for (let s = 0; s < this.length; s++)this[s].addEventListener(t, e); return this }, e.prototype.off = function (t, e) { if (!t || !e) return this; for (let s = 0; s < this.length; s++)this[s].removeEventListener(t, e); return this }, e.prototype.click = function (t) { for (let e = 0; e < this.length; e++)t ? this[e].addEventListener("click", t) : this[e].click(); return this }, e.prototype.setAttr = function (t, e) { for (let s = 0; s < this.length; s++) { if (!t && !e) return this; t && !e ? this[s].setAttribute(t, "") : this[s].setAttribute(t, e) } return this }, e.prototype.removeAttr = function (t) { for (let e = 0; e < this.length; e++)this[e].removeAttribute(t); return this }, e.prototype.getAttr = function (t) { for (let e = 0; e < this.length; e++)if (this[0].getAttribute(t)) return this[e].getAttribute(t); return this }, e.prototype.toggleAttr = function (t, e) { for (let s = 0; s < this.length; s++)this[s].hasAttribute(t) ? this[s].removeAttribute(t) : t && !e ? this[s].setAttribute(t, "") : this[s].setAttribute(t, e); return this }, e.prototype.html = function (t) { for (let e = 0; e < this.length; e++) { if (!t) return this[e].innerHTML; this[e].innerHTML = t } return this }, e.prototype.eq = function (t) { const e = this[t], s = Object.keys(this).length; for (let t = 0; t < s; t++)delete this[t]; return this[0] = e, this.length = 1, this }, e.prototype.index = function () { return [...this[0].parentNode.children].findIndex((t => t == this[0])) }, e.prototype.find = function (t) { let e = 0, s = 0; const i = Object.assign({}, this); for (let n = 0; n < i.length; n++) { const o = i[n].querySelectorAll(t); if (0 != o.length) { for (let t = 0; t < o.length; t++)this[s] = o[t], s++; e += o.length } } this.length = e; const n = Object.keys(this).length; for (; e < n; e++)delete this[e]; return this }, e.prototype.closest = function (t) { let e = 0; for (let s = 0; s < this.length; s++)this[s].closest(t) && (this[s] = this[s].closest(t), e++); const s = Object.keys(this).length; for (; e < s; e++)delete this[e]; return this }, e.prototype.siblings = function () { let t = 0, e = 0; const s = Object.assign({}, this); for (let i = 0; i < s.length; i++) { const n = s[i].parentNode.children; for (let t = 0; t < n.length; t++)s[i] !== n[t] && (this[e] = n[t], e++); t += n.length - 1 } this.length = t; const i = Object.keys(this).length; for (; t < i; t++)delete this[t]; return this }, e.prototype.animateOverTime = function (t, e, s) { let i; return function n(o) { i || (i = o); let l = o - i, r = Math.min(l / t, 1); e(r), l < t ? requestAnimationFrame(n) : "function" == typeof s && s() } }, e.prototype.fadeIn = function (t, e, s) { for (let i = 0; i < this.length; i++) { this[i].style.display = e || "block"; const n = t => { this[i].style.opacity = t }, o = this.animateOverTime(t, n, s); requestAnimationFrame(o) } return this }, e.prototype.fadeOut = function (t, e) { for (let s = 0; s < this.length; s++) { const i = t => { this[s].style.opacity = 1 - t, 1 === t && (this[s].style.display = "none") }, n = this.animateOverTime(t, i, e); requestAnimationFrame(n) } return this }, e.prototype.fadeToggle = function (t, s, i) { for (let n = 0; n < this.length; n++)"none" === window.getComputedStyle(this[n]).display ? e(this[n]).fadeIn(t, s, i) : e(this[n]).fadeOut(t, i); return this }, e.prototype.dropdown = function () { for (let t = 0; t < this.length; t++) { const s = e(this[t]).getAttr("id"); e(this[t]).click((() => { e(`[data-toggle-id="${s}"]`).fadeToggle(300) })) } }, e(".dropdown-toggle").dropdown(), e.prototype.modal = function (t) { for (let s = 0; s < this.length; s++) { const i = e(this[s]).getAttr("data-target"); e(this[s]).click((t => { t.preventDefault(), e(i).fadeIn(500), document.body.style.paddingRight = window.innerWidth - document.body.offsetWidth + "px", document.querySelectorAll(".fixed-blocks").forEach((t => { t.style.paddingRight = window.innerWidth - document.body.offsetWidth + "px" })), document.body.style.overflow = "hidden" })), e(`${i} [data-close]`).click((() => { e(i).fadeOut(500), document.body.style.overflow = "", document.body.style.paddingRight = "", document.querySelectorAll(".fixed-blocks").forEach((t => { t.style.paddingRight = "" })), t && setTimeout((() => { document.querySelector(i).remove() }), 501) })), e(i).click((s => { s.target.classList.contains("modal") && (e(i).fadeOut(500), document.body.style.overflow = "", document.body.style.paddingRight = "", document.querySelectorAll(".fixed-blocks").forEach((t => { t.style.paddingRight = "" })), t && setTimeout((() => { document.querySelector(i).remove() }), 501)) })) } }, e('[data-toggle="modal"]').modal(), e.prototype.createModal = function ({ text: t, btns: s } = {}) { for (let i = 0; i < this.length; i++) { let n = document.createElement("div"); n.classList.add("modal", "fixed-blocks"), n.setAttribute("id", e(this[i]).getAttr("data-target").slice(1)); const o = [], { settings: l } = s; for (let t = 0; t < s.count; t++) { let e = document.createElement("button"); e.classList.add("btn", ...l[t][1]), e.textContent = l[t][0], l[t][2] && e.setAttribute("data-close", "true"), s.settings[t][3] && "function" == typeof l[t][3] && e.addEventListener("click", l[t][3]), o.push(e) } n.innerHTML = `\n\t\t<div class="modal-dialog">\n\t\t\t<div class="modal-content">\n\t\t\t\t<button class="close" data-close>\n\t\t\t\t\t<span>&times;</span>\n\t\t\t\t</button>\n\t\t\t\t<div class="modal-header">\n\t\t\t\t\t<div class="modal-title">\n\t\t\t\t\t\t${t.title}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="modal-body">\n\t\t\t\t\t${t.body}\n\t\t\t\t</div>\n\t\t\t\t<div class="modal-footer">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t`, n.querySelector(".modal-footer").append(...o), document.body.appendChild(n), e(this[i]).modal(!0), e(this[i].getAttribute("data-target")).fadeIn(500) } }, e.prototype.tab = function () { for (let t = 0; t < this.length; t++)e(this[t]).click((() => { e(this[t]).addClass("tab-item--active").siblings().removeClass("tab-item--active").closest(".tab").find(".tab-content").removeClass("tab-content--active").eq(t).addClass("tab-content--active") })) }, e("[data-tabpanel] .tab-item").tab(), e.prototype.accordion = function (t = "accordion-head--active", s = "accordion-content--active", i = 40) { for (let n = 0; n < this.length; n++)e(this[n]).click((() => { e(this[n]).toggleClass(t), e(this[n].nextElementSibling).toggleClass(s), this[n].classList.contains(t) ? this[n].nextElementSibling.style.maxHeight = this[n].nextElementSibling.scrollHeight + i + "px" : this[n].nextElementSibling.style.maxHeight = "0px" })) }, e(".accordion-head").accordion(), e.prototype.carousel = function () { for (let t = 0; t < this.length; t++) { const s = window.getComputedStyle(this[t].querySelector(".carousel-inner")).width.slice(0, -2), i = this[t].querySelectorAll(".carousel-item"), n = this[t].querySelector(".carousel-slides"), o = this[t].querySelectorAll(".carousel-indicators li"); n.style.width = 100 * i.length + "%", i.forEach((t => { t.style.width = s })); let l = 0, r = 0; e(this[t].querySelector('[data-slide="next"]')).click((t => { t.preventDefault(), l == +s.replace(/\D/g, "") * (i.length - 1) ? l = 0 : l += +s.replace(/\D/g, ""), n.style.transform = `translateX(-${l}px)`, r == i.length - 1 ? r = 0 : r++, o.forEach((t => t.classList.remove("active"))), o[r].classList.add("active") })), e(this[t].querySelector('[data-slide="prev"]')).click((t => { t.preventDefault(), 0 == l ? l = +s.replace(/\D/g, "") * (i.length - 1) : l -= +s.replace(/\D/g, ""), n.style.transform = `translateX(-${l}px)`, 0 == r ? r = i.length - 1 : r--, o.forEach((t => t.classList.remove("active"))), o[r].classList.add("active") })); const a = this[t].getAttribute("id"); e(`#${a} .carousel-indicators li`).click((t => { const e = t.target.getAttribute("data-slide-to"); r = e, l = +s.replace(/\D/g, "") * e, n.style.transform = `translateX(-${l}px)`, o.forEach((t => t.classList.remove("active"))), o[r].classList.add("active") })) } }, e.prototype.createCarousel = function (t = []) { for (let s = 0; s < this.length; s++) { this[s].innerHTML = '\n\t\t<ol class="carousel-indicators">\n\t\t</ol>\n\t\t<div class="carousel-inner">\n\t\t\t<div class="carousel-slides">\n\t\t\t</div>\n\t\t</div>\n\t\t<a href="#" class="carousel-prev" data-slide="prev">\n\t\t\t\t<span class="carousel-prev-icon">&lt;</span>\n\t\t\t</a>\n\t\t\t<a href="#" class="carousel-next" data-slide="next">\n\t\t\t\t<span class="carousel-next-icon">&gt;</span>\n\t\t\t</a>\n\t\t'; const i = [], n = []; t.forEach(((t, e) => { const s = document.createElement("li"), o = document.createElement("img"), l = document.createElement("div"); l.classList.add("carousel-item"), s.setAttribute("data-slide-to", e), o.setAttribute("src", t.url), o.setAttribute("alt", t.alt), l.append(o), i.push(s), n.push(l) })), this[s].querySelector(".carousel-indicators").append(...i), this[s].querySelector(".carousel-slides").append(...n), e(this[s]).carousel() } }, e.prototype.get = async function (t, e = "json") { let s = await fetch(t); if (!s.ok) throw new Error(`Could not fetch ${t}, status: ${s.status}`); switch (e) { case "json": return await s.json(); case "text": return await s.text(); case "blob": return await s.blob() } }, e.prototype.post = async function (t, e, s = "text") { let i = await fetch(t, { method: "POST", body: e }); switch (s) { case "json": return await i.json(); case "text": return await i.text(); case "blob": return await i.blob() } } })();